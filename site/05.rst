######################
부분 다운로드
######################

SmartDownloader API 적용
=========================

사용자가 선택해서 파일을 다운로드 받기 위해서는 다운로드 API 호출 직전에 DownloadConfig에서 사용자가 원하는 경로를 넣어줘야 합니다.

.. code-block:: C#

    // Assets/TOAST/HandsOnLab/SmartDL/Scripts/SmartDownloader.cs

   public static void StartDownload(Action<DownloadResult> callback, params string[] paths)
   {
       downloadConfig.ClearSpecifyPath();

       if (paths.Length > 0)
       {
           for (int i = 0; i < paths.Length; i++)
           {
               downloadConfig.AddSpecifyPath(paths[i]);
           }
       }
       
       // 4. 전체 다운로드에서 구현했던 내용 유지
   }


UI 구현
=====================

1. 부분 다운로드를 위해서는 업로드된 리소스의 폴더 구조를 확인합니다.

    .. image:: _static/image/console_service_resources_viewer.png

2. 다운로드 받을 파일을 선택합니다.

    * /Sample/stage 폴더 내 리소스 전부
    * /Sample/Sample.manifest

3. UI에 표시하기 위해 MainView.cs 파일에서 구현합니다.

    .. code-block:: C#

        // Assets/TOAST/HandsOnLab/SmartDL/Scripts/MainView.cs
        
        public void OnStartDownload()
        {
            HandsOnLabView.Instance.StartDownloaded();
            SmartDownloader.StartDownload(
                result =>
                {
                    string resultMessage = result.ToString();
                    HandsOnLabView.Instance.FinishDownload(resultMessage);
                },
                @"/Sample/stage",
                @"/Sample/Sample.manifest");
        }


실행 결과
=====================

1. 샘플 씬에서 플레이 버튼을 눌러 게임을 실행합니다.

2. 화면에서 **DOWNLOAD** 버튼을 누릅니다.

    .. image:: _static/image/sdk_sample_download_ui_intro.png

3. 다운로드가 완료되면 결과 팝업이 출력됩니다.

    .. image:: _static/image/sdk_sample_download_ui_result.png

4. 결과 팝업을 닫고 **OPEN PATH** 버튼을 누르면 다운로드 경로로 이동하며 다운로드된 파일을 확인합니다.

    .. image:: _static/image/sdk_download_path.png

5. 다음 진행을 위해 **DELETE CACHE** 버튼을 눌러 다운로드된 파일을 삭제합니다.